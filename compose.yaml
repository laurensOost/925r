services:
  ninetofiver:
    build: .
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE?}
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION?}
      - CFG_FILE_PATH=${CFG_FILE_PATH?}
      - MYSQL_DB=${MYSQL_DATABASE?}
      - MYSQL_USER=${MYSQL_USER?}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD?}
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE?}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED?}
      - SUPERUSER_EMAIL=${SUPERUSER_EMAIL?}
      - SUPERUSER_USERNAME=${SUPERUSER_USERNAME?}
      - SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD?}
    command: |
      bash -c "
        python manage.py migrate
        echo \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('${SUPERUSER_USERNAME?}', '${SUPERUSER_EMAIL?}', '${SUPERUSER_PASSWORD?}')\" | python manage.py shell || true
        echo \"from oauth2_provider.models import Application; from django.contrib.auth import get_user_model; User = get_user_model(); client = Application.objects.create(user=User.objects.filter(is_staff=True)[0], name='${API_APPLICATION_NAME?}', client_id='${API_APPLICATION_CLIENT_ID?}', client_secret='${API_APPLICATION_CLIENT_SECRET?}', authorization_grant_type=Application.GRANT_PASSWORD)\" | python manage.py shell || true
        python manage.py runserver 0.0.0.0:8000
      "
    networks:
      - ninetofiver
    ports:
      - "8000"

  minio:
    image: minio/minio:latest
    hostname: "minio"
    command: 'minio server /data --console-address ":9001"'
    env_file: 
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  migration:
    build:
      context: .
      dockerfile: Dockerfile.migration
    depends_on:
      - ninetofiver
      - minio
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ninetofiver
      - MYSQL_USER=ninetofiver
      - MYSQL_PASSWORD=ninetofiver
      - MINIO_ENDPOINT=127.0.0.1:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio-client
      - MINIO_MEDIA_FILES_BUCKET=media
    networks:
      - ninetofiver

volumes:
  minio-data:

networks:
  ninetofiver: